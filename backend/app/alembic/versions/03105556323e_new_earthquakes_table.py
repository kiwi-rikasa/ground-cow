"""new earthquakes table

Revision ID: 03105556323e
Revises: 373f736c04c7
Create Date: 2025-04-24 09:07:03.546256

"""

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "03105556323e"
down_revision = "373f736c04c7"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "earthquake",
        sa.Column("earthquake_id", sa.Integer(), nullable=False),
        sa.Column("earthquake_created_at", sa.DateTime(), nullable=False),
        sa.Column("earthquake_magnitude", sa.Float(), nullable=False),
        sa.Column("earthquake_occurred_at", sa.DateTime(), nullable=False),
        sa.Column(
            "earthquake_source", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.PrimaryKeyConstraint("earthquake_id"),
    )
    op.add_column("alert", sa.Column("zone_id", sa.Integer(), nullable=True))
    op.add_column(
        "alert", sa.Column("alert_is_suppressed_by", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "alert", "zone", ["zone_id"], ["zone_id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "alert",
        "alert",
        ["alert_is_suppressed_by"],
        ["alert_id"],
        ondelete="SET NULL",
    )
    op.add_column("event", sa.Column("earthquake_id", sa.Integer(), nullable=True))
    op.add_column("event", sa.Column("zone_id", sa.Integer(), nullable=True))
    op.add_column("event", sa.Column("event_intensity", sa.Float(), nullable=False))
    op.create_unique_constraint(
        "uq_event_earthquake_zone", "event", ["earthquake_id", "zone_id"]
    )
    op.drop_constraint("event_event_is_suppressed_by_fkey", "event", type_="foreignkey")
    op.create_foreign_key(
        None,
        "event",
        "earthquake",
        ["earthquake_id"],
        ["earthquake_id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "event", "zone", ["zone_id"], ["zone_id"], ondelete="CASCADE"
    )
    op.drop_column("event", "event_location")
    op.drop_column("event", "event_depth")
    op.drop_column("event", "event_epicenter")
    op.drop_column("event", "event_is_suppressed_by")
    op.drop_column("event", "event_magnitude")
    op.drop_column("event", "event_source")
    op.drop_column("event", "event_occurred_at")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "event",
        sa.Column(
            "event_occurred_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "event",
        sa.Column("event_source", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "event",
        sa.Column(
            "event_magnitude",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "event",
        sa.Column(
            "event_is_suppressed_by", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "event",
        sa.Column("event_epicenter", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "event",
        sa.Column(
            "event_depth",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "event",
        sa.Column("event_location", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "event", type_="foreignkey")
    op.drop_constraint(None, "event", type_="foreignkey")
    op.create_foreign_key(
        "event_event_is_suppressed_by_fkey",
        "event",
        "event",
        ["event_is_suppressed_by"],
        ["event_id"],
        ondelete="SET NULL",
    )
    op.drop_constraint("uq_event_earthquake_zone", "event", type_="unique")
    op.drop_column("event", "event_intensity")
    op.drop_column("event", "zone_id")
    op.drop_column("event", "earthquake_id")
    op.drop_constraint(None, "alert", type_="foreignkey")
    op.drop_constraint(None, "alert", type_="foreignkey")
    op.drop_column("alert", "alert_is_suppressed_by")
    op.drop_column("alert", "zone_id")
    op.drop_table("earthquake")
    # ### end Alembic commands ###
